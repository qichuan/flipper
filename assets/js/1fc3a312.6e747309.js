(self.webpackChunk=self.webpackChunk||[]).push([[5670],{3905:(e,n,t)=>{"use strict";t.d(n,{Zo:()=>d,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(t),m=i,f=c["".concat(p,".").concat(m)]||c[m]||u[m]||a;return t?r.createElement(f,o(o({ref:n},d),{},{components:t})):r.createElement(f,o({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1817:(e,n,t)=>{"use strict";t.r(n),t.d(n,{frontMatter:()=>o,metadata:()=>l,toc:()=>p,default:()=>m});var r=t(4034),i=t(9973),a=(t(7294),t(3905)),o={id:"dev-setup",title:"Development Setup"},l={unversionedId:"extending/dev-setup",id:"extending/dev-setup",isDocsHomePage:!1,title:"Development Setup",description:"IDE",source:"@site/../docs/extending/dev-setup.mdx",sourceDirName:"extending",slug:"/extending/dev-setup",permalink:"/docs/extending/dev-setup",editUrl:"https://github.com/facebook/flipper/blob/master/website/../docs/extending/dev-setup.mdx",version:"current",frontMatter:{id:"dev-setup",title:"Development Setup"},sidebar:"extending",previous:{title:"Publishing your Plugin",permalink:"/docs/tutorial/js-publishing"},next:{title:"Dynamically Loading Plugins",permalink:"/docs/extending/loading-custom-plugins"}},p=[{value:"IDE",id:"ide",children:[{value:"TypeScript",id:"typescript",children:[]},{value:"Android (Java)",id:"android-java",children:[]}]},{value:"Running Flipper from source (recommended)",id:"running-flipper-from-source-recommended",children:[{value:"Startup options",id:"startup-options",children:[]}]},{value:"Guidelines for writing TypeScript",id:"guidelines-for-writing-typescript",children:[]},{value:"Submitting a diff / PR",id:"submitting-a-diff--pr",children:[]}],s=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)}},d=s("OssOnly"),u=s("FbInternalOnly"),c={toc:p};function m(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"ide"},"IDE"),(0,a.kt)(d,{mdxType:"OssOnly"},(0,a.kt)("p",null,"When developing Flipper plugins we recommend the following IDEs:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"TypeScript (for Flipper Desktop (plugins)): Visual Studio Code"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},'Install the "ESLint" (dbaeumer.vscode-eslint) extension from marketplace to enable linting'),(0,a.kt)("li",{parentName:"ol"},'Install the "Prettier" (esbenp.prettier-vscode) extension to enable automatic code-formatting'),(0,a.kt)("li",{parentName:"ol"},"If for some reason it is not working, the builtin TypeScript extension might be disabled. To enable it, to go to extensions, search for \u201c@builtin typescript\u201d and enable it."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Android Studio (for Android plugins)")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"XCode (for iOS plugins)")))),(0,a.kt)(u,{mdxType:"FbInternalOnly"},(0,a.kt)("h3",{id:"typescript"},"TypeScript"),(0,a.kt)("p",null,'Flipper Desktop is written in TypeScript.\nUsing our internal "VSCode @ FB" as IDE is strongly recommended (',(0,a.kt)("inlineCode",{parentName:"p"},"code-fb"),")."),(0,a.kt)("p",null,"Make sure to install the ",(0,a.kt)("inlineCode",{parentName:"p"},"[FB-Internal]"),' "ESLint" and "Pretter" extensions are enabled.'),(0,a.kt)("p",null,"If for some reason it is not working, the builtin TypeScript extension might be disabled. To enable it, to go to extensions, search for \u201c@builtin typescript\u201d and enable it."),(0,a.kt)("h3",{id:"android-java"},"Android (Java)"),(0,a.kt)("p",null,"IntelliJ is the recommended platform. Focussing on a flipper-enabled app should include the flipper modules as expected."),(0,a.kt)("p",null,"If you don't have an fbsource checkout (e.g. Whatsapp Team), you can open Android Studio and import project: ",(0,a.kt)("inlineCode",{parentName:"p"},"fbsource/xplat/sonar")),(0,a.kt)("p",null,"If you're having gradle (or other) problems, make sure you're on the latest Android Studio version.")),(0,a.kt)("h2",{id:"running-flipper-from-source-recommended"},"Running Flipper from source (recommended)"),(0,a.kt)("p",null,"When developing Flipper plugins we strongly recommend to run from Flipper itself from source as well, as this yields several benefits:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Automatic transpilation and bundling of loaded plugins: ES6, TypeScript, JSX."),(0,a.kt)("li",{parentName:"ul"},"Automatic refresh after code changes."),(0,a.kt)("li",{parentName:"ul"},"React and Redux Dev Tools."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"debugging"},"Debugging")," using Chrome Dev Tools or Visual Studio Code."),(0,a.kt)("li",{parentName:"ul"},"Additional debug information like React warnings and performance metrics. ")),(0,a.kt)("p",null,"Prerequisites for Flipper development build:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"node \u2265 14"),(0,a.kt)("li",{parentName:"ul"},"yarn \u2265 1.5"),(0,a.kt)("li",{parentName:"ul"},"git"),(0,a.kt)("li",{parentName:"ul"},"watchman")),(0,a.kt)("p",null,"To run Flipper Desktop from source:"),(0,a.kt)(d,{mdxType:"OssOnly"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git clone https://github.com/facebook/flipper.git\ncd flipper/desktop\nyarn\nyarn start\n")),(0,a.kt)("p",null,"Tip: start with ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn start --fast-refresh")," for experimental fast refresh.")),(0,a.kt)(u,{mdxType:"FbInternalOnly"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"fbclone fbsource\ncd ~/fbsource/xplat/sonar/desktop\nyarn\nyarn start\n")),(0,a.kt)("p",null,"Tip: start with ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn start --fast-refresh")," for experimental fast refresh."),(0,a.kt)("p",null,"Tip: start wih ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn start --public-build")," to preview changes for public builds."),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"code-fb .")," in the same directory to open an IDE to hack on Flipper.")),(0,a.kt)("h3",{id:"startup-options"},"Startup options"),(0,a.kt)("p",null,"You can use several options to customise development build instance. They can be provided as command-line args or environment variables.\nYou can check all of them by executing ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn start --help"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'yarn start [args]\n\nOptions:\n  --embedded-plugins    Enables embedding of plugins into Flipper bundle. If it\n                        disabled then only installed plugins are loaded. The\n                        flag is enabled by default. Env var\n                        FLIPPER_NO_EMBEDDED_PLUGINS is equivalent to the\n                        command-line option "--no-embedded-plugins".   [boolean]\n  --fast-refresh        Enable Fast Refresh - quick reload of UI component\n                        changes without restarting Flipper. The flag is disabled\n                        by default. Env var FLIPPER_FAST_REFRESH is equivalent\n                        to the command-line option "--fast-refresh".   [boolean]\n  --plugin-auto-update  [FB-internal only] Enable plugin auto-updates. The flag\n                        is disabled by default in dev mode. Env var\n                        FLIPPER_NO_PLUGIN_AUTO_UPDATE is equivalent to the\n                        command-line option "--no-plugin-auto-update"  [boolean]\n  --enabled-plugins     Load only specified plugins and skip loading rest. This\n                        is useful when you are developing only one or few\n                        plugins. Plugins to load can be specified as a\n                        comma-separated list with either plugin id or name used\n                        as identifier, e.g. "--enabled-plugins\n                        network,inspector". The flag is not provided by default\n                        which means that all plugins loaded.             [array]\n  --open-dev-tools      Open Dev Tools window on startup. The flag is disabled\n                        by default. Env var FLIPPER_OPEN_DEV_TOOLS is equivalent\n                        to the command-line option "--open-dev-tools". If \n                        "FLIPPER_UPDATE_DEV_TOOLS=true" is set additionally, \n                        Flipper will try to update the dev tools from the play \n                        store.                                         [boolean]\n  --dev-server-port     Dev server port. 3000 by default. Env var "PORT=3001" is\n                        equivalent to the command-line option "--dev-server-port\n                        3001".                          [number] [default: 3000]\n  --version             Show version number                            [boolean]\n  --help                Show help                                      [boolean]\n')),(0,a.kt)("p",null,"You can also create file ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"desktop")," subfolder and specify any environment variables to load them automatically on ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn start")," so you don't need to pass command-line args every time, e.g.:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"FLIPPER_FAST_REFRESH=true\nFLIPPER_OPEN_DEV_TOOLS=true\nFLIPPER_ENABLED_PLUGINS=flipper-messages,network,inspector\n")),(0,a.kt)("h2",{id:"guidelines-for-writing-typescript"},"Guidelines for writing TypeScript"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Important:")," Use ",(0,a.kt)("inlineCode",{parentName:"li"},".tsx")," file extension for all TypeScript files (instead of ",(0,a.kt)("inlineCode",{parentName:"li"},".ts"),")"),(0,a.kt)("li",{parentName:"ul"},"Prefer ",(0,a.kt)("inlineCode",{parentName:"li"},"type")," for React props and state over interfaces"),(0,a.kt)("li",{parentName:"ul"},"Don\u2019t prefix interfaces with ",(0,a.kt)("inlineCode",{parentName:"li"},"I")),(0,a.kt)("li",{parentName:"ul"},"Enums, Types and Interfaces use PascalCase (uppercase first letter)"),(0,a.kt)("li",{parentName:"ul"},"Install 3rd party type definitions as dev dependency (e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"yarn add @types/lodash --dev"),")")),(0,a.kt)("h2",{id:"submitting-a-diff--pr"},"Submitting a diff / PR"),(0,a.kt)("p",null,"Make sure your new functionality is covered with tests, and run ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn test")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn test --watch")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"desktop/")," directory to verify that they pass. "),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"testing"},"testing")," page for more details on writing and running test."),(0,a.kt)("p",null,"To make sure you don't get any lint/formatting errors, run ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn lint")," before submitting your diff. Some errors (especially formatting errors can be auto-fixed by running ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn fix")))}m.isMDXComponent=!0}}]);